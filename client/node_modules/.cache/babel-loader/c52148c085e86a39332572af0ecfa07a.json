{"ast":null,"code":"var _jsxFileName = \"/Users/majalund/IdeaProjects/forefront/client/src/shared-components/movie-list.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Movie from './movie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst getImgUrl = (base_url, poster_path) => base_url + '/w500' + poster_path;\n\nconst MovieList = props => {\n  _s();\n\n  const {\n    movies\n  } = props;\n  const [imgConfig, setImgConfig] = useState(null);\n  useEffect(() => {\n    fetch('/imageConfiguration').then(res => res.json()).then(data => setImgConfig(data.message));\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: movies.map(({\n      title,\n      poster_path\n    }, index) => /*#__PURE__*/_jsxDEV(Movie, {\n      img_url: getImgUrl(imgConfig.base_url, poster_path),\n      title: title\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this))\n  }, void 0, false);\n};\n\n_s(MovieList, \"HHmVgS3DmesI6LAAH6qVqxVMyQ8=\");\n\n_c = MovieList;\nMovieList.propeTypes = {\n  movies: PropTypes.array.isRequired\n};\nexport default MovieList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"sources":["/Users/majalund/IdeaProjects/forefront/client/src/shared-components/movie-list.jsx"],"names":["React","PropTypes","Movie","getImgUrl","base_url","poster_path","MovieList","props","movies","imgConfig","setImgConfig","useState","useEffect","fetch","then","res","json","data","message","map","title","index","propeTypes","array","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;;AAEA,MAAMC,SAAS,GAAG,CAACC,QAAD,EAAWC,WAAX,KAA2BD,QAAQ,GAAG,OAAX,GAAqBC,WAAlE;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM;AAAEC,IAAAA;AAAF,MAAaD,KAAnB;AACA,QAAM,CAACE,SAAD,EAAYC,YAAZ,IAA4BC,QAAQ,CAAC,IAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,KAAK,CAAC,qBAAD,CAAL,CACKC,IADL,CACWC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADnB,EAEKF,IAFL,CAEWG,IAAI,IAAIP,YAAY,CAACO,IAAI,CAACC,OAAN,CAF/B;AAGH,GAJQ,CAAT;AAMA,sBACI;AAAA,cACKV,MAAM,CAACW,GAAP,CAAW,CAAC;AAAEC,MAAAA,KAAF;AAASf,MAAAA;AAAT,KAAD,EAAyBgB,KAAzB,kBACR,QAAC,KAAD;AAEI,MAAA,OAAO,EAAElB,SAAS,CAACM,SAAS,CAACL,QAAX,EAAqBC,WAArB,CAFtB;AAGI,MAAA,KAAK,EAAEe;AAHX,OACSC,KADT;AAAA;AAAA;AAAA;AAAA,YADH;AADL,mBADJ;AAWH,CArBD;;GAAMf,S;;KAAAA,S;AAuBNA,SAAS,CAACgB,UAAV,GAAuB;AACnBd,EAAAA,MAAM,EAAEP,SAAS,CAACsB,KAAV,CAAgBC;AADL,CAAvB;AAIA,eAAelB,SAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Movie from './movie';\n\nconst getImgUrl = (base_url, poster_path) => base_url + '/w500' + poster_path;\n\nconst MovieList = (props) => {\n    const { movies } = props;\n    const [imgConfig, setImgConfig] = useState(null)\n\n    useEffect(() => {\n        fetch('/imageConfiguration')\n            .then((res) => res.json())\n            .then((data => setImgConfig(data.message)))\n    })\n\n    return (\n        <>\n            {movies.map(({ title, poster_path }, index) =>\n                <Movie\n                    key={index}\n                    img_url={getImgUrl(imgConfig.base_url, poster_path)}\n                    title={title}\n                />\n            )}\n        </>\n    )\n}\n\nMovieList.propeTypes = {\n    movies: PropTypes.array.isRequired\n}\n\nexport default MovieList;"]},"metadata":{},"sourceType":"module"}